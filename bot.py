from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

import os

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–¥–∞—á (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤ –ø–∞–º—è—Ç–∏)
user_tasks = {}

TOKEN = os.getenv("TELEGRAM_TOKEN")


# /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    user_tasks[user_id] = []  # —Å–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ú–∞—Ä–∫ ‚Äî —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –∏ —è –≤—Å—ë –∑–∞–ø–æ–º–Ω—é üòâ"
    )


# –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    message = update.message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª /start
    if user_id not in user_tasks:
        user_tasks[user_id] = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É
    user_tasks[user_id].append(message)

    await update.message.reply_text(f"–ó–∞–ø–æ–º–Ω–∏–ª: ¬´{message}¬ª. –ù–µ –∑–∞–±—É–¥—É!")

    
# –ö–æ–º–∞–Ω–¥–∞ /tasks ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
async def list_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    tasks = user_tasks.get(user_id, [])

    if not tasks:
        await update.message.reply_text("–¢—ã –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ—Å–∏–ª.")
    else:
        task_list = "\n".join(f"{i+1}. {task}" for i, task in enumerate(tasks))
        await update.message.reply_text(f"–í–æ—Ç —á—Ç–æ —Ç—ã –º–Ω–µ —É–∂–µ –ø–æ—Ä—É—á–∏–ª:\n{task_list}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("tasks", list_tasks))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()


if __name__ == '__main__':
    main()
